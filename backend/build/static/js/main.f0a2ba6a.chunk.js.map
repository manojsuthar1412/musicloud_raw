{"version":3,"sources":["Login.js","useAuth.js","TrackSearchResult.js","CustomPlayer.js","Dashboard.js","App.js","index.js"],"names":["AUTH_URL","process","console","log","login","className","style","height","href","backend","useAuth","code","useState","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","useEffect","axios","post","then","res","data","window","history","pushState","catch","err","location","interval","setInterval","refresh","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","width","title","artist","name","CustomPlayer","artists","reload","undefined","setReload","f","names","setNames","url","setUrl","flagRef","setFlagRef","path","startUp","a","get","JSON","parse","ListBucketResult","Contents","forEach","arr","Key","_text","PlaySong","includes","test","replaceAll","handleDwnld","dest","params","uri","externalUrl","dest_path","Myplayer","controls","type","spotifyApi","SpotifyWebApi","clientId","Dashboard","search","setSearch","searchResult","setSearchResult","playingTrack","setPlayingTrack","art","setArt","lyrics","cancel","searchTracks","body","tracks","items","map","smallAlbumImage","album","images","reduce","smallest","image","external_urls","spotify","searchSongs","curr_track","placeholder","value","onChange","e","target","overflowY","length","whiteSpace","URLSearchParams","App","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0a2ba6a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst client_id = process.env.REACT_APP_CLIENT_ID;\r\nconst redirect_uri = process.env.REACT_APP_REDIRECT_URI;\r\nconst scope =\r\n  \"streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\r\n\r\nconst AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${client_id}&response_type=code&redirect_uri=${redirect_uri}&scope=${scope}`;\r\n\r\nconsole.log(\"AUTH URL: \", AUTH_URL);\r\nconst login = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <a className=\"btn btn-lg btn-success\" href={AUTH_URL}>\r\n        Login to MUSICLOUD\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default login;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport login from \"./Login\";\r\n\r\nconst backend = process.env.REACT_APP_BACKEND;\r\nconsole.log(\"BACKEND: \", backend);\r\n\r\nexport default function useAuth(code) {\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [refreshToken, setRefreshToken] = useState();\r\n  const [expiresIn, setExpiresIn] = useState();\r\n\r\n  const login = () => {\r\n    axios\r\n      .post(`${backend}/login`, { code })\r\n      .then((res) => {\r\n        setAccessToken(res.data.accessToken);\r\n        setRefreshToken(res.data.refreshToken);\r\n        setExpiresIn(res.data.expiresIn);\r\n        window.history.pushState({}, null, \"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        window.location = \"/\";\r\n      });\r\n  };\r\n\r\n  const refresh = () => {\r\n    if (!refreshToken || !expiresIn) return;\r\n    const interval = setInterval(() => {\r\n      axios\r\n        .post(`${backend}/refresh`, { refreshToken })\r\n        .then((res) => {\r\n          setAccessToken(res.data.accessToken);\r\n          setExpiresIn(res.data.expiresIn);\r\n        })\r\n        .catch(() => {\r\n          window.location = \"/\";\r\n        });\r\n    }, (expiresIn - 60) * 1000);\r\n    return () => clearInterval(interval);\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n  }, [code]);\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [refreshToken, expiresIn]);\r\n\r\n  return accessToken;\r\n}\r\n","import React from \"react\";\r\n\r\nconst TrackSearchResult = ({ track, chooseTrack }) => {\r\n  function handlePlay() {\r\n    chooseTrack(track);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"d-flex m-2 align-items-center\"\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={handlePlay}\r\n    >\r\n      <img src={track.albumUrl} style={{ height: \"64px\", width: \"64px\" }} />\r\n      <div className=\"ms-3\">\r\n        <div className=\"fw-bold\">{track.title}</div>\r\n        <div className=\"text-muted\">{track.artist[0].name}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackSearchResult;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst backend = process.env.REACT_APP_BACKEND;\r\n\r\nconst CustomPlayer = ({\r\n  track,\r\n  artists,\r\n  reload = undefined,\r\n  setReload = (f) => f,\r\n}) => {\r\n  const [names, setNames] = useState([]);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [flagRef, setFlagRef] = useState(false);\r\n  const [path, setPath] = useState(\"\");\r\n\r\n  const startUp = async () => {\r\n    // setUrl(\"\");\r\n    // setNames([]);\r\n    await axios.get(`${backend}/list`).then((res) => {\r\n      let data = JSON.parse(res.data);\r\n      data.ListBucketResult.Contents.forEach((name) => {\r\n        setNames((arr) => [...arr, name.Key._text]);\r\n      });\r\n    });\r\n    // PlaySong();\r\n    // setReload(!reload);\r\n  };\r\n\r\n  const PlaySong = async () => {\r\n    setUrl(\"\");\r\n    // console.log(\"TITLE: \", track.title);\r\n    // setFlagRef(!flagRef);\r\n\r\n    // console.log(\"NAMES: \", names);\r\n    await names.forEach((name) => {\r\n      if (name.includes(track.title)) {\r\n        let test = name.replaceAll(\" \", \"%20\");\r\n        setUrl(\r\n          `https://testmusicdata.s3.us-south.cloud-object-storage.appdomain.cloud/${test}`\r\n        );\r\n        // setFlagRef(false);\r\n      }\r\n    });\r\n    // console.log(\"URL IN PLAYSONG: \", url);\r\n  };\r\n\r\n  const handlePath = (e) => {\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleDwnld = async () => {\r\n    console.log(\"URL: \", url);\r\n    console.log(\"FLAG: \", flagRef);\r\n    console.log(\"RELOAD: \", reload);\r\n    if (!url && flagRef) {\r\n      console.log(names);\r\n      console.log(\"Downloading....\");\r\n      console.log(artists);\r\n      // setFlagRef(!flagRef);\r\n      let name = \"\";\r\n      let dest = \"\";\r\n\r\n      await axios\r\n        .get(`${backend}/download`, {\r\n          params: {\r\n            uri: track.externalUrl,\r\n            title: track.title,\r\n            artist: artists,\r\n            dest_path: path,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          // startUp();\r\n          // setUrl(\"\");\r\n          // console.log(res);\r\n          name = res.data.name;\r\n          dest = res.data.dest;\r\n          setFlagRef(true);\r\n          console.log(\"DONE\");\r\n          // console.log(res);\r\n        });\r\n      console.log(\"NAME: \", name);\r\n      console.log(\"DEST: \", dest);\r\n      axios\r\n        .get(`${backend}/upload`, {\r\n          params: {\r\n            name: name,\r\n            dest: dest,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"RES FROM UPLOAD: \", res);\r\n        });\r\n    }\r\n  };\r\n\r\n  const Myplayer = () => (\r\n    <audio controls>\r\n      {/* {console.log(\"URL IN HTML: \", url)} */}\r\n      <source src={url} type=\"audio/ogg\" />\r\n    </audio>\r\n  );\r\n\r\n  useEffect(async () => {\r\n    await startUp();\r\n    await PlaySong();\r\n    handleDwnld();\r\n    setReload(!reload);\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    await PlaySong();\r\n    handleDwnld();\r\n\r\n    // setFlagRef(!flagRef);\r\n  }, [track, reload]);\r\n\r\n  // useEffect(() => {\r\n  //   handleDwnld();\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span>{track.title} </span>\r\n        <span>\r\n          {url\r\n            ? url.includes(track.title[0])\r\n              ? \"-will play\"\r\n              : \"-downloading\"\r\n            : \"Error\"}\r\n        </span>\r\n        <button\r\n          className=\"btn btn-outline-warning btn-sm ms-5 me-auto\"\r\n          onClick={() => {\r\n            startUp();\r\n            setFlagRef(!flagRef);\r\n            setReload(!reload);\r\n          }}\r\n        >\r\n          Refresh\r\n        </button>\r\n      </h1>\r\n      {url}\r\n      {/* <input type=\"file\" onChange={handlePath} /> */}\r\n\r\n      {url && <Myplayer />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPlayer;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport Player from \"./Player\";\r\nimport axios from \"axios\";\r\nimport CustomPlayer from \"./CustomPlayer\";\r\n\r\nconst backend = process.env.REACT_APP_BACKEND;\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: process.env.REACT_APP_CLIENT_ID,\r\n});\r\n\r\nconst Dashboard = ({ code }) => {\r\n  const accessToken = useAuth(code);\r\n  const [search, setSearch] = useState();\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [playingTrack, setPlayingTrack] = useState();\r\n  const [art, setArt] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n\r\n  const searchSongs = () => {\r\n    if (!search) return setSearchResult([]);\r\n    if (!accessToken) return;\r\n    setArt([]);\r\n    let cancel = false;\r\n    spotifyApi.searchTracks(search).then((res) => {\r\n      if (cancel) return;\r\n      setSearchResult(\r\n        res.body.tracks.items.map((track) => {\r\n          // console.log(track);\r\n          const smallAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image;\r\n              return smallest;\r\n            },\r\n            track.album.images[0]\r\n          );\r\n          //   console.log(\"Track: \", track.external_urls.spotify);\r\n          return {\r\n            artist: track.artists,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallAlbumImage.url,\r\n            externalUrl: track.external_urls.spotify,\r\n          };\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  };\r\n\r\n  const chooseTrack = (track) => {\r\n    // console.log(\"Playing track: \", track);\r\n    track.artist.forEach((artist) => {\r\n      setArt((arr) => [...arr, artist.name]);\r\n    });\r\n    setSearch(\"\");\r\n    setPlayingTrack(track);\r\n    setSearchResult([]);\r\n    // setReload(true);\r\n    // setLyrics(\"\");\r\n  };\r\n\r\n  const playingLyrics = () => {\r\n    if (!playingTrack) return;\r\n\r\n    axios\r\n      .get(`${backend}/lyrics`, {\r\n        params: {\r\n          track: playingTrack.title,\r\n          artist: playingTrack.artist[0].name,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setLyrics(res.data.lyrics);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    searchSongs();\r\n    // setArt([]);\r\n  }, [search, accessToken]);\r\n\r\n  const handlePlay = (curr_track) => {\r\n    // console.log(art);\r\n\r\n    return (\r\n      <CustomPlayer\r\n        track={curr_track}\r\n        artists={art}\r\n        reload={reload}\r\n        setReload={setReload}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container d-flex flex-column py-2\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <input\r\n        className=\"form-control\"\r\n        type=\"search\"\r\n        placeholder=\"Search songs/artists\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResult.map((track) => {\r\n          return (\r\n            <TrackSearchResult\r\n              track={track}\r\n              key={track.uri}\r\n              chooseTrack={chooseTrack}\r\n            />\r\n          );\r\n        })}\r\n        {searchResult.length === 0 && (\r\n          <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\r\n            {lyrics}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {/* <Player accessToken={accessToken} trackUri={playingTrack?.uri} /> */}\r\n        {playingTrack && handlePlay(playingTrack)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\n\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  return code ? <Dashboard code={code} /> : <Login />;\n  // return <Login />;\n  // return ()\n  //   <div>\n  //     <Lo\n  //   </div>\n  // )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}